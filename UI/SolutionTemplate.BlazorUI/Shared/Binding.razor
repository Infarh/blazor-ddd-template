@using System.ComponentModel

@if (_Value is { } model)
{
    @if (ChildContent is { } template)
    {
        @template
    }
    else
    {
        @model
    }
}
else if (EmptyTemplate is { } empty_template)
{
    @empty_template
}

@code
{
    [Parameter]
    public RenderFragment? EmptyTemplate { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private object? _Value;

    [Parameter]
    public object? Value
    {
        get => _Value;
        set
        {
            if (ReferenceEquals(_Value, value)) return;
            if (_Value is INotifyPropertyChanged old_model)
                old_model.PropertyChanged -= OnValueChanged;
            _Value = value;
            if (value is INotifyPropertyChanged new_model)
                new_model.PropertyChanged += OnValueChanged;
        }
    }

    public string? PropertyName { get; set; }

    private void OnValueChanged(object? Sender, PropertyChangedEventArgs E)
    {
        if (PropertyName is { Length: > 0 } name && name != E.PropertyName)
            return;
        StateHasChanged();
    }
}
